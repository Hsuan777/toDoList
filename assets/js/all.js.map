{"version":3,"sources":["all.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","db","database","app","Vue","createApp","data","toDoList","toDo","hasLogin","uid","nullKey","methods","getData","vm","ref","on","snapshot","val","postData","trim","key","push","child","set","date","Date","getTime","deleteData","remove","deleteAll","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","onAuthState","signOut","alert","onAuthStateChanged","user","console","log","cleanData","mounted","mount"],"mappings":"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","file":"all.js","sourcesContent":["// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDQv3-yDg_Fu6UVZYz9YWMbh3ka1m8NwiA\",\n  authDomain: \"webtest2-c2d0c.firebaseapp.com\",\n  databaseURL: \"https://webtest2-c2d0c-default-rtdb.firebaseio.com\",\n  projectId: \"webtest2-c2d0c\",\n  storageBucket: \"webtest2-c2d0c.appspot.com\",\n  messagingSenderId: \"1003425564921\",\n  appId: \"1:1003425564921:web:31710ac40e85a41bbbba28\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// firebase 資料庫\nconst db = firebase.database();\n\n// Vue\nconst app = Vue.createApp({\n  data() {\n    return {\n      toDoList: {},\n      toDo: '',\n      hasLogin: false,\n      uid: '',\n      nullKey: '',\n    }\n  },\n  methods: {\n    getData() {\n      const vm = this;\n      // 取得屬性值\n      db.ref(`${vm.uid}`).on('value', (snapshot) => {\n        vm.toDoList = snapshot.val() || {};\n      })\n    },\n    postData() {\n      if (!this.toDo.trim()) {\n        return;\n      }\n      // 取得推送亂數 ID\n      const key = db.ref(`${this.uid}`).push().key;\n\n      // 推送，在子層建立資料\n      db.ref(`${this.uid}`).child(key).set({\n        // 加入相同 key 值，方便刪除\n        key: key,\n        toDo: this.toDo,\n        date: new Date().getTime(),\n      })\n      this.toDo = '';\n    },\n    deleteData(key) {\n      db.ref(`${this.uid}`).child(key).remove();\n    },\n    deleteAll() {\n      db.ref(`${this.uid}`).remove();\n    },\n    // google 登入\n    provider() {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      const vm = this;\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        // 可以獲得 Google 提供 token，token可透過 Google API 獲得其他數據。\n        // const credential = result.credential;\n        // const token = result.credential.accessToken;\n        // const user = result.user;\n        vm.onAuthState();\n      });\n    },\n    // 登出\n    signOut() {\n      firebase.auth().signOut().then(() => {\n        this.onAuthState();\n        alert('已登出');\n      })\n    },\n    // 監聽登入狀態\n    onAuthState() {\n      const vm = this;\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          console.log(\"User is logined\")\n          vm.hasLogin = true;\n          vm.uid = user.uid;\n          vm.getData();\n        } else {\n          console.log(\"User is not logined yet.\");\n          vm.cleanData();\n        }\n      });\n    },\n    cleanData() {\n      this.hasLogin = false;\n      this.toDoList = [];\n      this.uid = '';\n    },\n  },\n  mounted() {\n    this.onAuthState();\n  },\n}).mount('#app');"]}